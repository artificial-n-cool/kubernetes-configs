apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-app
  labels:
    app: {{ .Values.app.name }}-app
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-app
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.api.networking.targetPort }}"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: {{ .Values.app.name }}-app
          image: {{ .Values.app.name }}-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: MANAGEMENT_SERVER_PORT
              value: "8081"
            - name: OTEL_METRICS_EXPORTER
              value: none
            - name: OTEL_TRACING_EXPORTER
              value: otlp,logging
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://tempo-tempo-distributed-distributor.observability.svc.cluster.local:4317
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.app.name }}-app-service  # TODO: Videti je li app-service ili samo app
            - name: KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: app={{ .Values.app.name }}-app
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  key: host
                  name: mongo-config-{{ .Values.app.name }}
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  key: port
                  name: mongo-config-{{ .Values.app.name }}
            - name: MONGO_DB
              valueFrom:
                configMapKeyRef:
                  key: database
                  name: mongo-config-{{ .Values.app.name }}
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mongo-secret
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mongo-secret
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}-app-service
  labels:
    app: {{ .Values.app.name }}-app
spec:
  selector:
    app: {{ .Values.app.name }}-app
  ports:
    - port: 8080
      targetPort: 8080
      name: http-traffic
  type: NodePort
