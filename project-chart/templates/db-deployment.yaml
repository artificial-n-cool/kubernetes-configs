apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app.name }}-pv-claim
  labels:
    app: {{ .Values.app.name }}-mongo
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.storage.storageSize }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-mongo
  labels:
    app: {{ .Values.app.name }}-mongo
    tier: database
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-mongo
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-mongo
        tier: database
    spec:
      containers:
        - name: {{ .Values.storage.db }}
          image: {{ .Values.storage.db }}:{{ .Values.storage.dbVersion }}
#          env:
#            - name: MONGO_INITDB_ROOT_USERNAME
#              valueFrom:
#                secretKeyRef:
#                  key: username
#                  name: mongo-secret-guest
#            - name: MONGO_INITDB_ROOT_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  key: password
#                  name: mongo-secret-guest
          ports:
            - containerPort: {{ .Values.storage.networking.containerPort }}
              name: {{ .Values.storage.db }}
          volumeMounts:
            - name: {{ .Values.app.name }}-persistent-storage
              mountPath: {{ .Values.storage.mountPath }}
      volumes:
        - name: {{ .Values.app.name }}-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.app.name }}-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}-mongo
  labels:
    app: {{ .Values.app.name }}-mongo
    tier: database
spec:
  ports:
    - port: {{ .Values.storage.networking.servicePort }}
      targetPort: {{ .Values.storage.networking.targetPort }}
  selector:
    app: {{ .Values.app.name }}-mongo
    tier: database
  clusterIP: None
